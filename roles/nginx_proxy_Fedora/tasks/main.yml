---
  - name: Setting host facts using key=value pairs, this format can only create strings or booleans
    set_fact: one_fact="something"   



  - name: Set authorized key took from file
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"



  - name: update Fedora
    yum: 
      name: '*' 
      state: latest
      exclude: kernel*   


  - name: set mydistribution
    ansible.builtin.set_fact:
      mydistribution: "{{ 'rhel' if (ansible_distribution == 'Fedora Linux') else (ansible_distribution | lower) }}"

  - name: Add signing key
    ansible.builtin.rpm_key:
      key: "https://download.docker.com/linux/{{ mydistribution }}/gpg"
      state: present

  - name: Add repository into repo.d list
    ansible.builtin.yum_repository:
      name: docker
      description: docker repository
      baseurl: "https://download.docker.com/linux/{{ mydistribution }}/$releasever/$basearch/stable"
      enabled: true
      gpgcheck: true
      gpgkey: "https://download.docker.com/linux/{{ mydistribution }}/gpg"

  - name: Install Docker
    ansible.builtin.yum:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: latest
      update_cache: true
    register : y

  - name: Checking Install Status
    debug:
      var: y.failed    

  - name: Start Docker
    ansible.builtin.service:
      name: "docker"
      enabled: true
      state: started                 

  - name: Starting Docker Daemon
    service:
      name: docker
      state: started
      enabled: yes
    when: y.failed == false  

  - name: install python dependacies
    become: true
    yum:
      update_cache: yes
      state: latest
      name: python3-pip

  - name: install 'Docker SDK for Python'
    pip:
      name: docker    

  - name: Pull a Docker Image
    docker_image:
      name: andreysagurov/nginx
      tag: latest
      source: pull
    register: z 

  - name: Checking Pull Status
    debug:
      var: z

  - name: Creating a Persistent Volume Dir
    file:
      path: /root/nginx      
      state: directory

  - name: Coping etc config
    template:                          #copy:
      src: nginx.j2.conf
      dest: /root/nginx/  
      

  - name: Launching NGINX Container
    when: z.failed == false
    docker_container:
      name: nginx
      image: andreysagurov/nginx
      state: started
      exposed_ports: 
        - "80"
      ports: 
        - "8888:80"
      volumes:
        - /root/nginx/nginx.j2.conf:/etc/nginx/nginx.conf
